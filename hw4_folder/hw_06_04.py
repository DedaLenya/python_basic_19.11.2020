"""6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,

б) итератор, повторяющий элементы некоторого списка, определенного заранее.
Подсказка: использовать функцию count() и cycle() модуля itertools. Обратите внимание,
что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.
Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено."""

import itertools


def start_finish_number(s, f):
    """а) итератор, генерирующий целые числа, начиная и заканчивая с указанного
    :param s: начало генератора чисел
    :param f: конец генератора чисел
    :return: целые числа старт и финиш
    """

    for el in itertools.count(s):
        if el > f:
            break
        else:
            print(el)


start_finish_number(3, 10)


def count_elem_list(vol):
    """б) итератор, повторяющий элементы некоторого списка, определенного заранее.
    :param vol: сколько элементов списка вывести
    :return: целое положительное число
    """

    count = 0
    for el in itertools.cycle(['повторяющий', 'элементы', 'некоторого', 'списка', 'определенного', 'заранее']):
        if count > vol - 1:
            break
        print(el)
        count += 1


count_elem_list(10)
